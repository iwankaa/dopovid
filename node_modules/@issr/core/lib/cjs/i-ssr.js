"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSsr = exports.ExcludeSsr = exports.IssrContext = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var effect_collection_1 = require("./effect-collection");
var utils_1 = require("./utils");
exports.IssrContext = (0, react_1.createContext)({});
var ExcludeSsr = function (_a) {
    var children = _a.children;
    if ((0, utils_1.isBackend)()) {
        return null;
    }
    if ((0, react_1.isValidElement)(children)) {
        return children;
    }
    if (typeof children === 'function') {
        return children();
    }
    return null;
};
exports.ExcludeSsr = ExcludeSsr;
var OnComplete = function (_a) {
    var loading = _a.loading, onLoad = _a.onLoad;
    (0, react_1.useEffect)(function () {
        if (!(0, utils_1.isBackend)() && loading) {
            setTimeout(function () { return onLoad(false); });
        }
    }, []);
    return null;
};
var createSsr = function (initState, options) {
    if (initState === void 0) { initState = {}; }
    if (options === void 0) { options = {}; }
    var app = {
        calledState: {},
        loading: options.onlyClient ? false : !(0, utils_1.isBackend)(),
        state: initState,
    };
    var setEffectCalledState = function (id) {
        if (!app.calledState[id]) {
            app.calledState[id] = true;
        }
    };
    var getEffectCalledState = function (id) {
        return Boolean(app.calledState[id]);
    };
    var effectCollection = new effect_collection_1.EffectCollection();
    var onLoad = function (state) {
        app.loading = state;
    };
    var isLoading = function () { return app.loading; };
    var getState = function () { return (0, utils_1.clone)(app.state); };
    var iSSR = function (_a) {
        var children = _a.children;
        return ((0, jsx_runtime_1.jsxs)(exports.IssrContext.Provider, __assign({ value: {
                effectCollection: effectCollection,
                getEffectCalledState: getEffectCalledState,
                getState: getState,
                initState: initState,
                isLoading: isLoading,
                setEffectCalledState: setEffectCalledState,
            } }, { children: [children, (0, jsx_runtime_1.jsx)(OnComplete, { loading: app.loading, onLoad: onLoad }, void 0)] }), void 0));
    };
    iSSR.getState = getState;
    iSSR.effectCollection = effectCollection;
    return iSSR;
};
exports.createSsr = createSsr;
//# sourceMappingURL=i-ssr.js.map