"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
/**
 * @jest-environment node
 */
var hooks_1 = require("./hooks");
var server_1 = require("./server");
describe('server render tests', function () {
    test('pure state', function () { return __awaiter(void 0, void 0, void 0, function () {
        var App, _a, html, state, key;
        var _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    App = function () {
                        var _a = (0, hooks_1.useSsrState)('', 'state-0'), state = _a[0], setState = _a[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-0');
                        var asyncFn = function () {
                            return new Promise(function (resolve) {
                                setTimeout(function () {
                                    resolve('test bar');
                                }, 500);
                            });
                        };
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn).then(function (testBar) {
                                setState(testBar);
                            });
                        }, [], 'use-effect-0');
                        return (0, jsx_runtime_1.jsx)("div", { children: state }, void 0);
                    };
                    return [4 /*yield*/, server_1.serverRender.string(function () { return (0, jsx_runtime_1.jsx)(App, {}, void 0); })];
                case 1:
                    _a = _c.sent(), html = _a.html, state = _a.state;
                    key = Object.keys(state)[0];
                    expect(html).toBe('<div>test bar</div>');
                    expect(state).toStrictEqual((_b = {}, _b[key] = 'test bar', _b));
                    return [2 /*return*/];
            }
        });
    }); });
    test('pure state and external callback', function () { return __awaiter(void 0, void 0, void 0, function () {
        var called, outsideEffect, externalCallback, App, _a, html, state, key;
        var _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    called = false;
                    outsideEffect = function () {
                        return new Promise(function (resolve) {
                            setTimeout(function () {
                                called = true;
                                resolve();
                            }, 500);
                        });
                    };
                    externalCallback = function () { return __awaiter(void 0, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    if (!!called) return [3 /*break*/, 2];
                                    return [4 /*yield*/, outsideEffect()];
                                case 1:
                                    _a.sent();
                                    _a.label = 2;
                                case 2: return [2 /*return*/];
                            }
                        });
                    }); };
                    App = function () {
                        var _a = (0, hooks_1.useSsrState)('', 'state-0'), state = _a[0], setState = _a[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-0');
                        var asyncFn = function () {
                            return new Promise(function (resolve) {
                                setTimeout(function () {
                                    resolve('test bar');
                                }, 500);
                            });
                        };
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn).then(function (data) {
                                setState(data);
                            });
                        }, [], 'use-effect-0');
                        return (0, jsx_runtime_1.jsx)("div", { children: state }, void 0);
                    };
                    return [4 /*yield*/, server_1.serverRender.string(function () { return (0, jsx_runtime_1.jsx)(App, {}, void 0); }, {
                            outsideEffects: externalCallback,
                        })];
                case 1:
                    _a = _c.sent(), html = _a.html, state = _a.state;
                    key = Object.keys(state)[0];
                    expect(called).toBe(true);
                    expect(html).toBe('<div>test bar</div>');
                    expect(state).toStrictEqual((_b = {}, _b[key] = 'test bar', _b));
                    return [2 /*return*/];
            }
        });
    }); });
    test('nested effects', function () { return __awaiter(void 0, void 0, void 0, function () {
        var asyncFn1, Wrapper, asyncFn2, A, asyncFn3, B, asyncFn4, C, App, _a, html, state;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    asyncFn1 = function () {
                        return new Promise(function (resolve) {
                            // eslint-disable-next-line no-promise-executor-return
                            return setTimeout(function () {
                                return resolve({
                                    show: true,
                                    value: 'Wrapper Component',
                                });
                            }, 300);
                        });
                    };
                    Wrapper = function (_a) {
                        var children = _a.children;
                        var _b = (0, hooks_1.useSsrState)({ show: false, value: 'none ' }, 'state-0'), state = _b[0], setState = _b[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-0');
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn1).then(function (data) {
                                setState(data);
                            });
                        }, [], 'use-effect-0');
                        return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { children: state.value }, void 0), state.show && children] }, void 0));
                    };
                    asyncFn2 = function () {
                        return new Promise(function (resolve) {
                            // eslint-disable-next-line no-promise-executor-return
                            return setTimeout(function () {
                                return resolve({
                                    show: true,
                                    value: 'A Component',
                                });
                            }, 300);
                        });
                    };
                    A = function (_a) {
                        var children = _a.children;
                        var _b = (0, hooks_1.useSsrState)({ show: false, value: 'none ' }, 'state-1'), state = _b[0], setState = _b[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-1');
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn2).then(function (data) {
                                setState(data);
                            });
                        }, [], 'use-effect-1');
                        return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { children: state.value }, void 0), state.show && children] }, void 0));
                    };
                    asyncFn3 = function () {
                        // eslint-disable-next-line no-promise-executor-return
                        return new Promise(function (resolve) { return setTimeout(function () { return resolve('B Component'); }, 300); });
                    };
                    B = function () {
                        var _a = (0, hooks_1.useSsrState)('none', 'state-2'), state = _a[0], setState = _a[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-2');
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn3).then(function (data) {
                                setState(data);
                            });
                        }, [], 'use-effect-2');
                        return ((0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("p", { children: state }, void 0) }, void 0));
                    };
                    asyncFn4 = function () { return new Promise(function (resolve) { return setTimeout(function () { return resolve('C Component'); }, 300); }); };
                    C = function () {
                        var _a = (0, hooks_1.useSsrState)('none', 'state-3'), state = _a[0], setState = _a[1];
                        var registerEffect = (0, hooks_1.useRegisterEffect)('effect-3');
                        (0, hooks_1.useSsrEffect)(function () {
                            registerEffect(asyncFn4).then(function (data) {
                                setState(data);
                            });
                        }, [], 'use-effect-3');
                        return ((0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("p", { children: state }, void 0) }, void 0));
                    };
                    App = function () { return ((0, jsx_runtime_1.jsxs)(Wrapper, { children: [(0, jsx_runtime_1.jsx)(A, { children: (0, jsx_runtime_1.jsx)(B, {}, void 0) }, void 0), (0, jsx_runtime_1.jsx)(C, {}, void 0)] }, void 0)); };
                    return [4 /*yield*/, server_1.serverRender.string(function () { return (0, jsx_runtime_1.jsx)(App, {}, void 0); })];
                case 1:
                    _a = _b.sent(), html = _a.html, state = _a.state;
                    expect(html).toBe('<div><p>Wrapper Component</p><div><p>A Component</p><div><p>B Component</p></div></div><div><p>C Component</p></div></div>');
                    expect(state).toStrictEqual({
                        'state-0': { show: true, value: 'Wrapper Component' },
                        'state-1': { show: true, value: 'A Component' },
                        'state-2': 'B Component',
                        'state-3': 'C Component',
                    });
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=server.spec.js.map